import Jama.Matrix;
import java.io.*;

public class Jama_warm_up {
	static public void print_myArray(Matrix A){
		int col=A.getColumnDimension();
		int row=A.getRowDimension();
		for(int i=0;i<col;i++){
			for(int j=0;j<row;j++){
				System.out.println(i);
				A.print(i, j);
			}
		}
	}
	static public void test(){
		PrintWriter my_writer=new PrintWriter(System.out); 
		double[][] val1 = {{1.,3.},{4.,5.}};
		double[][] val2 = {{6.,2.},{1.,3.}};
		Matrix A=new Matrix(val1);
		Matrix B=new Matrix(val2);
		Matrix C=A.times(B);
		A.print(40, 1);// The first argument is to print out the the column width, 1 is the precision
		Matrix D=C.transpose();
		Matrix E=C.inverse();
		
		Matrix Test1=A.times(B).times(C);
		Matrix Test2_0=A.times(B);
		Matrix Test2=Test2_0.times(C);
		Test1.print(4,1);
		Test2.print(4,1);
		//A.print(my_writer,1,1);
		//System.out.println(A.get(0,1));
	}
	
	static public void closed_form_linear_regression(){
		double[][] val1={{1., 3.},{4.,5.}};
		Matrix X=new Matrix(val1);
	}
	
	public static void main(String[] args){
		test();
		
	}
}
